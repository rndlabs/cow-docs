"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[348],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=o.createContext({}),l=function(e){var t=o.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(r),h=n,m=c["".concat(d,".").concat(h)]||c[h]||u[h]||a;return r?o.createElement(m,i(i({ref:t},p),{},{components:r})):o.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=h;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[c]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},3669:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const a={},i="STEP 3: Post the signed order to the API",s={unversionedId:"cow-sdk/sign-and-post-orders/step-3-post-the-signed-order-to-the-api",id:"cow-sdk/sign-and-post-orders/step-3-post-the-signed-order-to-the-api",title:"STEP 3: Post the signed order to the API",description:"Once you have a signed order, last step is to send it to the API.",source:"@site/docs/6_cow-sdk/sign-and-post-orders/5_step-3-post-the-signed-order-to-the-api.md",sourceDirName:"6_cow-sdk/sign-and-post-orders",slug:"/cow-sdk/sign-and-post-orders/step-3-post-the-signed-order-to-the-api",permalink:"/cow-docs/docs/cow-sdk/sign-and-post-orders/step-3-post-the-signed-order-to-the-api",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/6_cow-sdk/sign-and-post-orders/5_step-3-post-the-signed-order-to-the-api.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"STEP 2: Sign the order",permalink:"/cow-docs/docs/cow-sdk/sign-and-post-orders/step-2-sign-the-order"},next:{title:"BONUS: Show link to Explorer",permalink:"/cow-docs/docs/cow-sdk/sign-and-post-orders/bonus-show-link-to-explorer"}},d={},l=[],p={toc:l},c="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"step-3-post-the-signed-order-to-the-api"},"STEP 3: Post the signed order to the API"),(0,n.kt)("p",null,"Once you have a signed order, last step is to send it to the API."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The API will accept the order if its correctly signed, the deadline is correct, and the fee is enough to settle it"),(0,n.kt)("li",{parentName:"ul"},"Once accepted, the order will be ",(0,n.kt)("inlineCode",{parentName:"li"},"OPEN")," until the specified ",(0,n.kt)("inlineCode",{parentName:"li"},"validTo")," date (expiration)"),(0,n.kt)("li",{parentName:"ul"},"The possible outcomes once accepted are:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The order is ",(0,n.kt)("inlineCode",{parentName:"li"},"EXECUTED"),": you will pay the signed ",(0,n.kt)("a",{parentName:"li",href:"../../overview/definitions"},"protocol fee"),", and get at least the ",(0,n.kt)("inlineCode",{parentName:"li"},"buyAmount")," tokens you specified, although you will probably get more! (you will probably get a so-called ",(0,n.kt)("strong",{parentName:"li"},"Surplus"),")."),(0,n.kt)("li",{parentName:"ul"},"The order ",(0,n.kt)("inlineCode",{parentName:"li"},"EXPIRES"),": If your price is not good enough, and the order is out of the market price before expiration, your order will expire. This doesn't have any cost to the user, which ",(0,n.kt)("strong",{parentName:"li"},"only pays the protocol fee if the trade is executed"),"."),(0,n.kt)("li",{parentName:"ul"},"You cancel the order, so it becomes ",(0,n.kt)("inlineCode",{parentName:"li"},"CANCELLED"),". Cancelling an order can be done both as a free meta-transaction (",(0,n.kt)("strong",{parentName:"li"},"soft cancelations"),") or as a regular on-chain transaction (",(0,n.kt)("strong",{parentName:"li"},"hard cancelations"),")."))),(0,n.kt)("li",{parentName:"ul"},"The API will return an ",(0,n.kt)("inlineCode",{parentName:"li"},"orderId")," which identifies the order, and is created as a summary (hash) of it. In other words, the ",(0,n.kt)("inlineCode",{parentName:"li"},"orderId")," is deterministic given all the order parameters.")),(0,n.kt)("p",null,"Post an order using the SDK:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { OrderBookApi, SupportedChainId } from '@cowprotocol/cow-sdk'\n\nconst orderBookApi = new OrderBookApi({ chainId: SupportedChainId.MAINNET })\n\nconst orderId = await orderBookApi.sendOrder({ ...order, ...signedOrder })\n")),(0,n.kt)("p",null,"Success \ud83c\udf89! You managed to post a new valid order. Note that even though you awaited for the ",(0,n.kt)("inlineCode",{parentName:"p"},"sendOrder")," call, this only signals that the order was accepted by the protocol.\\\n\\\nAs a bonus, next section will show you how to view the estate of the order in the explorer."))}u.isMDXComponent=!0}}]);