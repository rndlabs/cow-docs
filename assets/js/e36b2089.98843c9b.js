"use strict";(self.webpackChunkcow_docs=self.webpackChunkcow_docs||[]).push([[4496],{3905:(t,e,r)=>{r.d(e,{Zo:()=>d,kt:()=>h});var n=r(7294);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,n,l=function(t,e){if(null==t)return{};var r,n,l={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(l[r]=t[r]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(l[r]=t[r])}return l}var c=n.createContext({}),u=function(t){var e=n.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},d=function(t){var e=u(t.components);return n.createElement(c.Provider,{value:e},t.children)},i="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var r=t.components,l=t.mdxType,o=t.originalType,c=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),i=u(r),p=l,h=i["".concat(c,".").concat(p)]||i[p]||k[p]||o;return r?n.createElement(h,a(a({ref:e},d),{},{components:r})):n.createElement(h,a({ref:e},d))}));function h(t,e){var r=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=r.length,a=new Array(o);a[0]=p;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s[i]="string"==typeof t?t:l,a[1]=s;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5464:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(7462),l=(r(7294),r(3905));const o={},a="User and ETH Flow Contract Orders",s={unversionedId:"smart-contracts/eth-flow-contract/user-and-eth-flow-contract-orders",id:"smart-contracts/eth-flow-contract/user-and-eth-flow-contract-orders",title:"User and ETH Flow Contract Orders",description:'Every ETH sell order from a user ("user order") will have a unique associated order in the eth-flow contract ("contract order").',source:"@site/docs/3_smart-contracts/eth-flow-contract/4_user-and-eth-flow-contract-orders.md",sourceDirName:"3_smart-contracts/eth-flow-contract",slug:"/smart-contracts/eth-flow-contract/user-and-eth-flow-contract-orders",permalink:"/cow-docs/docs/smart-contracts/eth-flow-contract/user-and-eth-flow-contract-orders",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/3_smart-contracts/eth-flow-contract/4_user-and-eth-flow-contract-orders.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interactions",permalink:"/cow-docs/docs/smart-contracts/eth-flow-contract/interactions"},next:{title:"Orders in Storage",permalink:"/cow-docs/docs/smart-contracts/eth-flow-contract/orders-in-storage"}},c={},u=[],d={toc:u},i="wrapper";function k(t){let{components:e,...r}=t;return(0,l.kt)(i,(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"user-and-eth-flow-contract-orders"},"User and ETH Flow Contract Orders"),(0,l.kt)("p",null,'Every ETH sell order from a user ("user order") will have a unique associated order in the eth-flow contract ("contract order").'),(0,l.kt)("p",null,"This order will be implicitly created when the user deposits ETH."),(0,l.kt)("p",null,"For simplicity, both orders will have the same representation that is used for settlement orders, but eth-flow order have slightly different parameters in the contract (for example, there is no need to specify a sell token since it's assumed to be WETH)."),(0,l.kt)("p",null,"The next table describes how to convert a user order into a contract order."),(0,l.kt)("p",null,"Note that what is described here as a user order is not a valid order for the settlement contract. It represents the data used by the eth-flow contract for bookkeeping. The contract order will be the one to be executed."),(0,l.kt)("table",{"data-header-hidden":!0},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Parameter"),(0,l.kt)("th",null,"User"),(0,l.kt)("th",null,"Contract"),(0,l.kt)("th",{"data-hidden":!0}))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,"sellToken"),(0,l.kt)("td",null,"ETH"),(0,l.kt)("td",null,"WETH"),(0,l.kt)("td",null,"Comment")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"buyToken"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null," ")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"receiver"),(0,l.kt)("td",null,"any except 0x0..0"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null,"Removing 0x0..0 because the receiver must be explicit. Using the zero address would imply a change of the receiver in the conversion.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"sellAmount"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null," ")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"buyAmount"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null," ")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"validTo"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"infinity"),(0,l.kt)("td",null,"It needs to be infinity because we rely on filledAmount in the exchange contract, which could be cleared by freeFilledAmountStorage.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"appData"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null," ")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"feeAmount"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null," ")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"kind"),(0,l.kt)("td",null,"sell"),(0,l.kt)("td",null,"sell"),(0,l.kt)("td",null,"This setup doesn't work well for BUY orders as the (small) ETH leftovers would be left in the eth-flow contract and it wouldn't be worth it in general to spend the gas to withdraw.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"partiallyFillable"),(0,l.kt)("td",null,"any"),(0,l.kt)("td",null,"same as user"),(0,l.kt)("td",null,"Supporting partially fillable orders with replacement makes things more complicated, but it should be possible.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"sellTokenBalance"),(0,l.kt)("td",null,"external"),(0,l.kt)("td",null,"external"),(0,l.kt)("td",null,"Probably we could make internal Balancer balances work as well, but I consider this low priority and didn't think about it.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,"buyTokenBalance"),(0,l.kt)("td",null,"external"),(0,l.kt)("td",null,"external"),(0,l.kt)("td",null,"\u2191")))))}k.isMDXComponent=!0}}]);